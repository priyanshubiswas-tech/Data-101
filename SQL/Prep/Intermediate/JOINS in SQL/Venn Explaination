# ü§ù SQL JOINS: Types, Syntax, and Uses

## üîó What are JOINS?
- JOINS are used to combine rows from two or more tables based on a related column.

---

## üß© Types of JOINS (with Venn Diagrams)

### 1. **INNER JOIN**
- Returns only the rows with matching keys in both tables.

```
 A ‚à© B
+-------+
|   A   |
|  +--+ |
|  |‚à© | |  ‚Üê Only common part
|  +--+ |
+-------+
```

```sql
SELECT a.*, b.*
FROM table_a a
INNER JOIN table_b b ON a.id = b.a_id;
```

---

### 2. **LEFT JOIN** (LEFT OUTER JOIN)
- Returns all rows from the left table and matched rows from the right.

```
 A ‚üï B
+-------+
|   A   |
| +--+  |
| |  |‚Üí | ‚Üê All of A + matched B
| +--+  |
+-------+
```

```sql
SELECT a.*, b.*
FROM table_a a
LEFT JOIN table_b b ON a.id = b.a_id;
```

---

### 3. **RIGHT JOIN** (RIGHT OUTER JOIN)
- Returns all rows from the right table and matched rows from the left.

```
 A ‚üñ B
+-------+
|   B   |
|  +--+ |
| ‚Üê|  | | ‚Üê All of B + matched A
|  +--+ |
+-------+
```

```sql
SELECT a.*, b.*
FROM table_a a
RIGHT JOIN table_b b ON a.id = b.a_id;
```

---

### 4. **FULL OUTER JOIN**
- Returns all rows from both tables. Nulls where there is no match.

```
 A ‚à™ B
+-------+
| A   B |
| +--+  |
| |  |  | ‚Üê All of A and all of B
|  +--+ |
+-------+
```

```sql
SELECT a.*, b.*
FROM table_a a
FULL OUTER JOIN table_b b ON a.id = b.a_id;
```

---

### 5. **CROSS JOIN**
- Returns Cartesian product (every row of A with every row of B).

```
 A √ó B
+--------+
| A ‚Ä¢ B  |
| All √ó  |
+--------+
```

```sql
SELECT a.*, b.*
FROM table_a a
CROSS JOIN table_b b;
```

---

### 6. **SELF JOIN**
- A table joins with itself using table aliases.

```sql
SELECT a.*, b.*
FROM employees a
JOIN employees b ON a.manager_id = b.emp_id;
```

---

## üìå When to Use

| Join Type      | Use Case |
|----------------|----------|
| INNER JOIN     | Only matched data is needed |
| LEFT JOIN      | Include all from left, even unmatched |
| RIGHT JOIN     | Include all from right |
| FULL OUTER JOIN| Combine both sides fully |
| CROSS JOIN     | Generate combinations |
| SELF JOIN      | Hierarchical or recursive comparisons |

